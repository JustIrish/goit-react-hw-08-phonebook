{"version":3,"file":"static/js/648.5ae46d04.chunk.js","mappings":"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","sources":["redux/selectors.js","components/ContactForm/ContactForm.js","components/ContactList/ContactListItem.js","components/ContactList/ContactList.js","components/Filter/Filter.js","pages/Contacts/Contacts.js"],"sourcesContent":["import { createSelector } from '@reduxjs/toolkit';\n\nexport const selectContacts = state => state.contacts.items;\nexport const selectFilter = state => state.filter.value;\nexport const selectIsLoading = state => state.contacts.isLoading;\nexport const selectError = state => state.contacts.error;\n\nexport const selectVisibleContacts = createSelector(\n  [selectContacts, selectFilter],\n  (contacts, value) => {\n    return contacts.filter(contact =>\n      contact.name.toLocaleLowerCase().includes(value.toLocaleLowerCase())\n    );\n  }\n);\n","import { useDispatch, useSelector } from 'react-redux';\nimport { useState } from 'react';\nimport { addContact } from 'redux/operations';\nimport { selectContacts, selectIsLoading } from 'redux/selectors';\nimport { nanoid } from 'nanoid';\nimport toast from 'react-hot-toast';\nimport { Box, Container, TextField, Grid } from '@mui/material';\nimport { LoadingButton } from '@mui/lab';\n\nexport const ContactForm = () => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectContacts);\n  const isLoading = useSelector(selectIsLoading);\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const nameInputId = nanoid();\n  const numberInputId = nanoid();\n\n  const handleChange = evt => {\n    const { name, value } = evt.currentTarget;\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n      case 'number':\n        setNumber(value);\n        break;\n\n      default:\n        break;\n    }\n  };\n\n  const handleSubmit = evt => {\n    evt.preventDefault();\n\n    if (\n      contacts.some(\n        contact => contact.name.toLowerCase() === name.trim().toLowerCase()\n      )\n    )\n      return toast.error(`${name} is already in contacts.`);\n\n    if (contacts.some(contact => contact.number === number.trim()))\n      return toast.error(`${number} is already in contacts.`);\n\n    const contact = { name, number };\n    dispatch(addContact(contact))\n      .unwrap()\n      .then(() => {\n        toast.success('Contact added!');\n        reset();\n      })\n      .catch(() =>\n        toast.error('Something went wrong...Try reloading the page')\n      );\n  };\n\n  const reset = () => {\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <Container component=\"main\" maxWidth=\"xs\">\n      <Box\n        sx={{\n          marginTop: 8,\n          display: 'flex',\n          flexDirection: 'column',\n          alignItems: 'center',\n        }}\n      >\n        <form onSubmit={handleSubmit}>\n          <Grid container spacing={4}>\n            <Grid item xs={12}>\n              <TextField\n                type=\"text\"\n                name=\"name\"\n                required\n                fullWidth\n                id={nameInputId}\n                value={name}\n                onChange={handleChange}\n                label=\"Name\"\n                pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n                title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <TextField\n                type=\"tel\"\n                name=\"number\"\n                required\n                fullWidth\n                id={numberInputId}\n                value={number}\n                onChange={handleChange}\n                label=\"Number\"\n                pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n                title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n              />\n            </Grid>\n          </Grid>\n          <LoadingButton\n            type=\"submit\"\n            fullWidth\n            variant=\"contained\"\n            sx={{ mt: 3, mb: 2 }}\n            loading={isLoading}\n          >\n            Add contact\n          </LoadingButton>\n        </form>\n      </Box>\n    </Container>\n  );\n};\n","import { useDispatch } from 'react-redux';\n// import { useState } from 'react';\nimport { deleteContact } from 'redux/operations';\n// import { Loader } from 'components/Loader/Loader';\nimport toast from 'react-hot-toast';\nimport PropTypes from 'prop-types';\nimport {\n  ListItem,\n  ListItemAvatar,\n  ListItemText,\n  Avatar,\n  IconButton,\n} from '@mui/material';\n\nimport AccountBoxIcon from '@mui/icons-material/AccountBox';\nimport DeleteIcon from '@mui/icons-material/Delete';\n\nexport const ContactListItem = ({ contact: { id, name, number } }) => {\n  // const [isDeleting, setIsDeleting] = useState(false);\n  const dispatch = useDispatch();\n\n  const handleOnDelete = () => {\n    // setIsDeleting(true);\n    dispatch(deleteContact(id))\n      .unwrap()\n      .then(() => {\n        toast.success('Contact deleted!');\n        // setIsDeleting(false);\n      })\n      .catch(() =>\n        toast.error('Something went wrong...Try reloading the page')\n      );\n  };\n\n  return (\n    <ListItem\n      sx={{\n        backgroundColor: 'rgba(152, 174, 194, 0.16)',\n        borderRadius: '4px',\n        boxShadow: 4,\n      }}\n    >\n      <ListItemAvatar>\n        <Avatar\n          sx={{\n            color: '#1976d2',\n            backgroundColor: 'transparent',\n          }}\n        >\n          <AccountBoxIcon sx={{ width: '30px', height: '30px' }} />\n        </Avatar>\n      </ListItemAvatar>\n      <ListItemText primary={name} secondary={number} />\n      <IconButton\n        edge=\"end\"\n        aria-label=\"delete\"\n        sx={{\n          '&:hover': { color: '#1976d2' },\n          '&:focus': { color: '#1976d2' },\n        }}\n        onClick={handleOnDelete}\n      >\n        <DeleteIcon />\n      </IconButton>\n    </ListItem>\n    // <ContactItem>\n    //   <TextWrap>\n    //     <ContactMarker></ContactMarker>\n    //     <ContactText>\n    //       <span>{name}:</span> <span>{number}</span>\n    //     </ContactText>\n    //   </TextWrap>\n    //   <BtnDelete type=\"button\" onClick={handleOnDelete} disabled={isDeleting}>\n    //     {isDeleting ? <Loader /> : 'Delete'}\n    //   </BtnDelete>\n    // </ContactItem>\n  );\n};\n\nContactListItem.propTypes = {\n  contact: PropTypes.shape({\n    id: PropTypes.string.isRequired,\n    name: PropTypes.string.isRequired,\n    number: PropTypes.string.isRequired,\n  }).isRequired,\n};\n","import { useSelector } from 'react-redux';\nimport { ContactListItem } from './ContactListItem';\nimport { selectVisibleContacts } from 'redux/selectors';\nimport { Box, List } from '@mui/material';\n\nexport const ContactList = () => {\n  const visibleContacts = useSelector(selectVisibleContacts);\n\n  return (\n    <Box sx={{ flexGrow: 1, maxWidth: '700px', m: '0 auto' }}>\n      <List\n        sx={{ display: 'flex', flexDirection: 'column', gap: '10px', p: '0' }}\n      >\n        {visibleContacts.map(contact => (\n          <ContactListItem key={contact.id} contact={contact} />\n        ))}\n      </List>\n    </Box>\n  );\n};\n","import { useDispatch, useSelector } from 'react-redux';\nimport { selectFilter } from 'redux/selectors';\nimport { setFilter } from 'redux/filterSlice';\nimport { TextField, Container } from '@mui/material';\n\nexport const Filter = () => {\n  const dispatch = useDispatch();\n  const value = useSelector(selectFilter);\n\n  const changeFilter = evt => {\n    dispatch(setFilter(evt.currentTarget.value.trim()));\n  };\n\n  return (\n    <Container\n      sx={{\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n        mt: '20px',\n        mb: '20px',\n      }}\n    >\n      <TextField\n        fullWidth\n        type=\"text\"\n        label=\"Find contacts by name\"\n        value={value}\n        variant=\"outlined\"\n        size=\"normal\"\n        sx={{ maxWidth: '700px' }}\n        onChange={changeFilter}\n      />\n    </Container>\n  );\n};\n","import { useDispatch, useSelector } from 'react-redux';\nimport { useEffect } from 'react';\nimport { fetchContacts } from 'redux/operations';\nimport { ContactForm } from 'components/ContactForm/ContactForm';\nimport { ContactList } from 'components/ContactList/ContactList';\nimport { Filter } from 'components/Filter/Filter';\nimport { Helmet } from 'react-helmet';\nimport { Skeleton, Box } from '@mui/material';\n// import { Typography } from '@mui/material';\nimport { selectIsLoading, selectError, selectContacts } from 'redux/selectors';\n\nexport default function Contacts() {\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectContacts);\n  const isLoading = useSelector(selectIsLoading);\n  const error = useSelector(selectError);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <>\n      <Helmet>\n        <title>Your contacts</title>\n      </Helmet>\n      {isLoading ? (\n        <Box\n          sx={{\n            display: 'flex',\n            flexDirection: 'column',\n            gap: 4,\n            alignItems: 'center',\n            marginTop: '60px',\n          }}\n        >\n          <Skeleton variant=\"rounded\" width={400} height={60} />\n          <Skeleton variant=\"rounded\" width={400} height={60} />\n          <Skeleton variant=\"rounded\" width={400} height={40} />\n          <Skeleton variant=\"rounded\" width={700} height={60} />\n          <Skeleton variant=\"rounded\" width={700} height={60} />\n          <Skeleton variant=\"rounded\" width={700} height={60} />\n          <Skeleton variant=\"rounded\" width={700} height={60} />\n        </Box>\n      ) : (\n        <>\n          <ContactForm />\n          <Filter />\n          {error && (\n            <div style={{ margin: '10px auto' }}>\n              Something went wrong... Try reloading the page\n            </div>\n          )}\n          {contacts.length > 0 ? (\n            <ContactList />\n          ) : (\n            <Box\n              sx={{\n                display: 'flex',\n                flexDirection: 'column',\n                gap: 4,\n                alignItems: 'center',\n              }}\n            >\n              <Skeleton variant=\"rounded\" width={700} height={60} />\n              <Skeleton variant=\"rounded\" width={700} height={60} />\n              <Skeleton variant=\"rounded\" width={700} height={60} />\n            </Box>\n          )}\n          ;\n        </>\n      )}\n    </>\n  );\n}\n"],"names":["selectContacts","state","contacts","items","selectFilter","filter","value","selectIsLoading","isLoading","selectError","error","selectVisibleContacts","createSelector","contact","name","toLocaleLowerCase","includes","ContactForm","dispatch","useDispatch","useSelector","useState","setName","number","setNumber","nameInputId","nanoid","numberInputId","handleChange","evt","currentTarget","reset","Container","component","maxWidth","Box","sx","marginTop","display","flexDirection","alignItems","onSubmit","preventDefault","some","toLowerCase","trim","toast","addContact","unwrap","then","catch","Grid","container","spacing","item","xs","TextField","type","required","fullWidth","id","onChange","label","pattern","title","LoadingButton","variant","mt","mb","loading","ContactListItem","ListItem","backgroundColor","borderRadius","boxShadow","ListItemAvatar","Avatar","color","AccountBox","width","height","ListItemText","primary","secondary","IconButton","edge","onClick","deleteContact","Delete","ContactList","visibleContacts","flexGrow","m","List","gap","p","map","Filter","justifyContent","size","setFilter","Contacts","useEffect","fetchContacts","Helmet","Skeleton","style","margin","length"],"sourceRoot":""}