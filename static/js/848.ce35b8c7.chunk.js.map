{"version":3,"file":"static/js/848.ce35b8c7.chunk.js","mappings":"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","sources":["redux/contacts/selectors.js","components/ContactForm/ContactForm.js","components/Loader/Loader.styled.js","components/Loader/Loader.js","components/EditModal/EditModal.js","components/ContactList/ContactListItem.js","components/ContactList/ContactList.js","components/Filter/Filter.js","pages/Contacts.js"],"sourcesContent":["import { createSelector } from '@reduxjs/toolkit';\n\nexport const selectContacts = state => state.contacts.items;\nexport const selectFilter = state => state.filter.value;\nexport const selectIsLoading = state => state.contacts.isLoading;\nexport const selectError = state => state.contacts.error;\n\nexport const selectVisibleContacts = createSelector(\n  [selectContacts, selectFilter],\n  (contacts, value) => {\n    return contacts.filter(contact =>\n      contact.name.toLocaleLowerCase().includes(value.toLocaleLowerCase())\n    );\n  }\n);\n","import { useDispatch, useSelector } from 'react-redux';\nimport { useState } from 'react';\nimport { addContact } from 'redux/contacts/operations';\nimport { selectContacts } from 'redux/contacts/selectors';\nimport { nanoid } from 'nanoid';\nimport toast from 'react-hot-toast';\nimport { Box, Container, TextField, Grid } from '@mui/material';\nimport { LoadingButton } from '@mui/lab';\n\nexport const ContactForm = () => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectContacts);\n  const [isAdding, setIsAdding] = useState(false);\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const nameInputId = nanoid();\n  const numberInputId = nanoid();\n\n  const handleChange = evt => {\n    const { name, value } = evt.currentTarget;\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n      case 'number':\n        setNumber(value);\n        break;\n\n      default:\n        break;\n    }\n  };\n\n  const handleSubmit = evt => {\n    evt.preventDefault();\n\n    if (\n      contacts.some(\n        contact => contact.name.toLowerCase() === name.trim().toLowerCase()\n      )\n    )\n      return toast.error(`${name} is already in contacts.`);\n\n    if (contacts.some(contact => contact.number === number.trim()))\n      return toast.error(`${number} is already in contacts.`);\n\n    const contact = { name, number };\n\n    setIsAdding(true);\n    dispatch(addContact(contact))\n      .unwrap()\n      .then(() => {\n        toast.success('Contact added!');\n        reset();\n        setIsAdding(false);\n      })\n      .catch(() =>\n        toast.error('Something went wrong...Try reloading the page')\n      );\n  };\n\n  const reset = () => {\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <Container component=\"main\" maxWidth=\"xs\">\n      <Box\n        sx={{\n          marginTop: 8,\n          display: 'flex',\n          flexDirection: 'column',\n          alignItems: 'center',\n        }}\n      >\n        <form onSubmit={handleSubmit}>\n          <Grid container spacing={4}>\n            <Grid item xs={12}>\n              <TextField\n                type=\"text\"\n                name=\"name\"\n                required\n                fullWidth\n                id={nameInputId}\n                value={name}\n                onChange={handleChange}\n                label=\"Name\"\n                pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n                title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <TextField\n                type=\"tel\"\n                name=\"number\"\n                required\n                fullWidth\n                id={numberInputId}\n                value={number}\n                onChange={handleChange}\n                label=\"Number\"\n                pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n                title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n              />\n            </Grid>\n          </Grid>\n          <LoadingButton\n            type=\"submit\"\n            fullWidth\n            variant=\"contained\"\n            sx={{ mt: 3, mb: 2 }}\n            loading={isAdding}\n          >\n            Add contact\n          </LoadingButton>\n        </form>\n      </Box>\n    </Container>\n  );\n};\n","import styled from 'styled-components';\n\nexport const SpinnerWrapper = styled.div`\n  display: flex;\n  justify-content: center;\n`;\n","import { Oval } from 'react-loader-spinner';\nimport { SpinnerWrapper } from './Loader.styled';\n\nexport const Loader = () => (\n  <SpinnerWrapper>\n    <Oval\n      height={14}\n      width={14}\n      color=\"#000000\"\n      visible={true}\n      ariaLabel=\"oval-loading\"\n      secondaryColor=\"#979191\"\n      strokeWidth={2}\n      strokeWidthSecondary={2}\n    />\n  </SpinnerWrapper>\n);\n","import { Box, Modal, Grid, TextField } from '@mui/material';\nimport LoadingButton from '@mui/lab/LoadingButton';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useFormik } from 'formik';\nimport toast from 'react-hot-toast';\nimport { selectIsLoading } from 'redux/contacts/selectors';\nimport { updateContact } from 'redux/contacts/operations';\n\nconst styledModal = {\n  position: 'absolute',\n  top: '50%',\n  left: '50%',\n  transform: 'translate(-50%, -50%)',\n  width: { xs: '100%', sm: '400px' },\n  bgcolor: 'background.paper',\n  borderRadius: '6px',\n  boxShadow: 24,\n  p: 6,\n};\n\nexport const EditModal = ({ isOpen, handleClose, id, name, number }) => {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(selectIsLoading);\n\n  const handleSubmit = (values, { resetForm }) => {\n    if (\n      name.trim().toLowerCase() === values.name.trim().toLowerCase() &&\n      number === values.number\n    ) {\n      toast.error('The same values');\n      return;\n    }\n\n    dispatch(updateContact(values))\n      .unwrap()\n      .then(() => {\n        toast.success('Contact edited!');\n        resetForm();\n        handleClose();\n      })\n      .catch(() =>\n        toast.error('Something went wrong...Try reloading the page')\n      );\n  };\n\n  const formik = useFormik({\n    initialValues: {\n      id,\n      name,\n      number,\n    },\n    onSubmit: handleSubmit,\n  });\n\n  return (\n    <Modal\n      open={isOpen}\n      onClose={handleClose}\n      aria-labelledby=\"modal-edit-contact\"\n      aria-describedby=\"modal-edit-contact\"\n    >\n      <Box sx={styledModal}>\n        <form autoComplete=\"off\" onSubmit={formik.handleSubmit}>\n          <Grid container spacing={4}>\n            <Grid item xs={12}>\n              <TextField\n                type=\"text\"\n                name=\"name\"\n                required\n                fullWidth\n                id=\"name\"\n                value={formik.values.name}\n                label=\"Name\"\n                onChange={formik.handleChange}\n                pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n                title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <TextField\n                type=\"tel\"\n                name=\"number\"\n                required\n                fullWidth\n                id=\"number\"\n                value={formik.values.number}\n                label=\"Number\"\n                onChange={formik.handleChange}\n                pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n                title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n              />\n            </Grid>\n          </Grid>\n          <LoadingButton\n            type=\"submit\"\n            fullWidth\n            variant=\"contained\"\n            sx={{ mt: 3, mb: 2 }}\n            loading={isLoading}\n          >\n            Edit contact\n          </LoadingButton>\n        </form>\n      </Box>\n    </Modal>\n  );\n};\n","import { useDispatch } from 'react-redux';\nimport { useState } from 'react';\nimport { deleteContact } from 'redux/contacts/operations';\nimport { Loader } from 'components/Loader/Loader';\nimport toast from 'react-hot-toast';\nimport PropTypes from 'prop-types';\nimport { EditModal } from 'components/EditModal/EditModal';\nimport {\n  ListItem,\n  ListItemAvatar,\n  ListItemText,\n  Avatar,\n  IconButton,\n  ListItemSecondaryAction,\n} from '@mui/material';\n\nimport AccountBoxIcon from '@mui/icons-material/AccountBox';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport EditIcon from '@mui/icons-material/Edit';\n\nexport const ContactListItem = ({ contact: { id, name, number } }) => {\n  const [isDeleting, setIsDeleting] = useState(false);\n  const [isOpen, setIsOpen] = useState(false);\n  const dispatch = useDispatch();\n\n  const handleOnDelete = () => {\n    setIsDeleting(true);\n    dispatch(deleteContact(id))\n      .unwrap()\n      .then(() => {\n        toast.success('Contact deleted!');\n        setIsDeleting(false);\n      })\n      .catch(() =>\n        toast.error('Something went wrong...Try reloading the page')\n      );\n  };\n\n  const handleOpenModal = () => setIsOpen(true);\n  const handleCloseModal = () => setIsOpen(false);\n\n  return (\n    <>\n      <ListItem\n        sx={{\n          backgroundColor: 'rgba(152, 174, 194, 0.16)',\n          borderRadius: '4px',\n          boxShadow: 4,\n        }}\n      >\n        <ListItemAvatar>\n          <Avatar\n            sx={{\n              color: '#1976d2',\n              backgroundColor: 'transparent',\n            }}\n          >\n            <AccountBoxIcon sx={{ width: '30px', height: '30px' }} />\n          </Avatar>\n        </ListItemAvatar>\n        <ListItemText primary={name} secondary={number} />\n        <ListItemSecondaryAction\n          sx={{ display: 'flex', flexDirection: 'row', gap: '16px' }}\n        >\n          <IconButton\n            edge=\"end\"\n            aria-label=\"edit\"\n            sx={{\n              '&:hover': { color: '#1976d2' },\n              '&:focus': { color: '#1976d2' },\n            }}\n            onClick={handleOpenModal}\n          >\n            <EditIcon />\n          </IconButton>\n          <IconButton\n            edge=\"end\"\n            aria-label=\"delete\"\n            sx={{\n              '&:hover': { color: '#1976d2' },\n              '&:focus': { color: '#1976d2' },\n            }}\n            onClick={handleOnDelete}\n          >\n            {isDeleting ? <Loader /> : <DeleteIcon />}\n          </IconButton>\n        </ListItemSecondaryAction>\n      </ListItem>\n      {isOpen && (\n        <EditModal\n          isOpen={isOpen}\n          handleClose={handleCloseModal}\n          id={id}\n          name={name}\n          number={number}\n        />\n      )}\n    </>\n  );\n};\n\nContactListItem.propTypes = {\n  contact: PropTypes.shape({\n    id: PropTypes.string.isRequired,\n    name: PropTypes.string.isRequired,\n    number: PropTypes.string.isRequired,\n  }).isRequired,\n};\n","import { useSelector } from 'react-redux';\nimport { ContactListItem } from './ContactListItem';\nimport { selectVisibleContacts } from 'redux/contacts/selectors';\nimport { Box, List, Typography } from '@mui/material';\n\nexport const ContactList = () => {\n  const visibleContacts = useSelector(selectVisibleContacts);\n\n  return (\n    <Box sx={{ flexGrow: 1, maxWidth: '700px', m: '0 auto' }}>\n      <List\n        sx={{ display: 'flex', flexDirection: 'column', gap: '10px', p: '0' }}\n      >\n        {visibleContacts.length === 0 && (\n          <Typography sx={{ m: '0 auto' }} variant=\"h6\" component=\"div\">\n            No contacts for your request ...\n          </Typography>\n        )}\n        {visibleContacts.map(contact => (\n          <ContactListItem key={contact.id} contact={contact} />\n        ))}\n      </List>\n    </Box>\n  );\n};\n","import { useDispatch, useSelector } from 'react-redux';\nimport { selectFilter } from 'redux/contacts/selectors';\nimport { setFilter } from 'redux/contacts/filterSlice';\nimport { TextField, Container } from '@mui/material';\n\nexport const Filter = () => {\n  const dispatch = useDispatch();\n  const value = useSelector(selectFilter);\n\n  const changeFilter = evt => {\n    dispatch(setFilter(evt.currentTarget.value.trim()));\n  };\n\n  return (\n    <Container\n      sx={{\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n        mt: '20px',\n        mb: '20px',\n      }}\n    >\n      <TextField\n        fullWidth\n        type=\"text\"\n        label=\"Find contacts by name\"\n        value={value}\n        variant=\"outlined\"\n        size=\"normal\"\n        sx={{ maxWidth: '700px' }}\n        onChange={changeFilter}\n      />\n    </Container>\n  );\n};\n","import { useDispatch, useSelector } from 'react-redux';\nimport { useEffect } from 'react';\nimport { fetchContacts } from 'redux/contacts/operations';\nimport { ContactForm } from 'components/ContactForm/ContactForm';\nimport { ContactList } from 'components/ContactList/ContactList';\nimport { Filter } from 'components/Filter/Filter';\nimport { Helmet } from 'react-helmet';\nimport { Skeleton, Box, Typography } from '@mui/material';\nimport {\n  selectIsLoading,\n  selectError,\n  selectContacts,\n} from 'redux/contacts/selectors';\n\nexport default function Contacts() {\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectContacts);\n  const isLoading = useSelector(selectIsLoading);\n  const error = useSelector(selectError);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <>\n      <Helmet>\n        <title>Your contacts</title>\n      </Helmet>\n      {isLoading ? (\n        <Box\n          sx={{\n            display: 'flex',\n            flexDirection: 'column',\n            gap: 4,\n            alignItems: 'center',\n            marginTop: '60px',\n          }}\n        >\n          <Skeleton variant=\"rounded\" width={400} height={60} />\n          <Skeleton variant=\"rounded\" width={400} height={60} />\n          <Skeleton variant=\"rounded\" width={400} height={40} />\n          <Skeleton variant=\"rounded\" width={700} height={60} />\n          <Skeleton variant=\"rounded\" width={700} height={60} />\n          <Skeleton variant=\"rounded\" width={700} height={60} />\n          <Skeleton variant=\"rounded\" width={700} height={60} />\n        </Box>\n      ) : (\n        <>\n          <ContactForm />\n          <Filter />\n          {error && (\n            <Box sx={{ display: 'flex', justifyContent: 'center', mb: 4 }}>\n              <Typography variant=\"h6\" component=\"div\">\n                Something went wrong...Try reloading the page\n              </Typography>\n            </Box>\n          )}\n          {contacts.length > 0 && !error ? (\n            <ContactList />\n          ) : (\n            <Box\n              sx={{\n                display: 'flex',\n                flexDirection: 'column',\n                gap: 4,\n                alignItems: 'center',\n              }}\n            >\n              <Skeleton variant=\"rounded\" width={700} height={60} />\n              <Skeleton variant=\"rounded\" width={700} height={60} />\n              <Skeleton variant=\"rounded\" width={700} height={60} />\n            </Box>\n          )}\n          ;\n        </>\n      )}\n    </>\n  );\n}\n"],"names":["selectContacts","state","contacts","items","selectFilter","filter","value","selectIsLoading","isLoading","selectError","error","selectVisibleContacts","createSelector","contact","name","toLocaleLowerCase","includes","ContactForm","dispatch","useDispatch","useSelector","useState","isAdding","setIsAdding","setName","number","setNumber","nameInputId","nanoid","numberInputId","handleChange","evt","currentTarget","reset","Container","component","maxWidth","Box","sx","marginTop","display","flexDirection","alignItems","onSubmit","preventDefault","some","toLowerCase","trim","toast","addContact","unwrap","then","catch","Grid","container","spacing","item","xs","TextField","type","required","fullWidth","id","onChange","label","pattern","title","LoadingButton","variant","mt","mb","loading","SpinnerWrapper","styled","Loader","height","width","color","visible","ariaLabel","secondaryColor","strokeWidth","strokeWidthSecondary","styledModal","position","top","left","transform","sm","bgcolor","borderRadius","boxShadow","p","EditModal","isOpen","handleClose","formik","useFormik","initialValues","values","resetForm","updateContact","Modal","open","onClose","autoComplete","handleSubmit","ContactListItem","isDeleting","setIsDeleting","setIsOpen","ListItem","backgroundColor","ListItemAvatar","Avatar","AccountBox","ListItemText","primary","secondary","ListItemSecondaryAction","gap","IconButton","edge","onClick","Edit","deleteContact","Delete","ContactList","visibleContacts","flexGrow","m","List","length","Typography","map","Filter","justifyContent","size","setFilter","Contacts","useEffect","fetchContacts","Helmet","Skeleton"],"sourceRoot":""}