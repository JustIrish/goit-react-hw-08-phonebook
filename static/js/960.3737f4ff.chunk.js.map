{"version":3,"file":"static/js/960.3737f4ff.chunk.js","mappings":"oTAOaA,EAAY,WACvB,IAAMC,GAAWC,EAAAA,EAAAA,MACTC,GAAkBC,EAAAA,EAAAA,KAAlBD,cAqBR,OACE,SAACE,EAAA,EAAD,CAAWC,UAAU,OAAOC,SAAS,KAArC,UACE,UAACC,EAAA,EAAD,CACEC,GAAI,CACFC,UAAW,EACXC,QAAS,OACTC,cAAe,SACfC,WAAY,UALhB,WAQE,SAACC,EAAA,EAAD,CAAYR,UAAU,KAAKS,QAAQ,KAAKC,GAAI,EAA5C,qBAGA,kBAAMC,SAhCS,SAAAC,GACnBA,EAAEC,iBACF,IAAMC,EAAOF,EAAEG,cACfpB,GACEqB,EAAAA,EAAAA,IAAM,CACJC,MAAOH,EAAKI,SAASD,MAAME,MAC3BC,SAAUN,EAAKI,SAASE,SAASD,SAGlCE,SACAC,MAAK,kBAAMC,EAAAA,GAAAA,QAAc,kCAApB,IACLC,OAAM,kBACLD,EAAAA,GAAAA,MACE,gFAFG,IAKTT,EAAKW,OACN,EAemCC,aAAa,MAA3C,WACE,UAACC,EAAA,GAAD,CAAMC,WAAS,EAACC,QAAS,EAAzB,WACE,SAACF,EAAA,GAAD,CAAMG,MAAI,EAACC,GAAI,GAAf,UACE,SAACC,EAAA,EAAD,CACEC,KAAK,QACLC,UAAQ,EACRC,WAAS,EACTC,GAAG,QACHC,MAAM,gBACNC,KAAK,QACLC,WAAS,OAGb,SAACZ,EAAA,GAAD,CAAMG,MAAI,EAACC,GAAI,GAAf,UACE,SAACC,EAAA,EAAD,CACEE,UAAQ,EACRC,WAAS,EACTG,KAAK,WACLD,MAAM,WACNJ,KAAK,WACLG,GAAG,mBAIT,SAACI,EAAA,EAAD,CACEP,KAAK,SACLE,WAAS,EACT1B,QAAQ,YACRN,GAAI,CAAEsC,GAAI,EAAG/B,GAAI,GACjBgC,QAAS7C,EALX,2BAaT,EC7Ec,SAAS8C,IACtB,OACE,4BACE,SAACC,EAAA,EAAD,WACE,wCAEF,SAAClD,EAAD,MAGL,C","sources":["components/LoginForm/LoginForm.js","pages/Login.js"],"sourcesContent":["import { TextField, Grid, Box, Typography, Container } from '@mui/material/';\nimport { LoadingButton } from '@mui/lab';\nimport { useDispatch } from 'react-redux';\nimport toast from 'react-hot-toast';\nimport { logIn } from 'redux/auth/operations';\nimport { useAuth } from 'hooks';\n\nexport const LoginForm = () => {\n  const dispatch = useDispatch();\n  const { authIsLoading } = useAuth();\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const form = e.currentTarget;\n    dispatch(\n      logIn({\n        email: form.elements.email.value,\n        password: form.elements.password.value,\n      })\n    )\n      .unwrap()\n      .then(() => toast.success('You have successfully logged in'))\n      .catch(() =>\n        toast.error(\n          'Something went wrong...Try reloading the page and enter valid email, password'\n        )\n      );\n    form.reset();\n  };\n\n  return (\n    <Container component=\"main\" maxWidth=\"xs\">\n      <Box\n        sx={{\n          marginTop: 8,\n          display: 'flex',\n          flexDirection: 'column',\n          alignItems: 'center',\n        }}\n      >\n        <Typography component=\"h1\" variant=\"h5\" mb={2}>\n          Log in\n        </Typography>\n        <form onSubmit={handleSubmit} autoComplete=\"off\">\n          <Grid container spacing={4}>\n            <Grid item xs={12}>\n              <TextField\n                type=\"email\"\n                required\n                fullWidth\n                id=\"email\"\n                label=\"Email Address\"\n                name=\"email\"\n                autoFocus\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <TextField\n                required\n                fullWidth\n                name=\"password\"\n                label=\"Password\"\n                type=\"password\"\n                id=\"password\"\n              />\n            </Grid>\n          </Grid>\n          <LoadingButton\n            type=\"submit\"\n            fullWidth\n            variant=\"contained\"\n            sx={{ mt: 3, mb: 2 }}\n            loading={authIsLoading}\n          >\n            Log in\n          </LoadingButton>\n        </form>\n      </Box>\n    </Container>\n  );\n};\n","import { Helmet } from 'react-helmet';\nimport { LoginForm } from 'components/LoginForm/LoginForm';\n\nexport default function Login() {\n  return (\n    <div>\n      <Helmet>\n        <title>Login</title>\n      </Helmet>\n      <LoginForm />\n    </div>\n  );\n}\n"],"names":["LoginForm","dispatch","useDispatch","authIsLoading","useAuth","Container","component","maxWidth","Box","sx","marginTop","display","flexDirection","alignItems","Typography","variant","mb","onSubmit","e","preventDefault","form","currentTarget","logIn","email","elements","value","password","unwrap","then","toast","catch","reset","autoComplete","Grid","container","spacing","item","xs","TextField","type","required","fullWidth","id","label","name","autoFocus","LoadingButton","mt","loading","Login","Helmet"],"sourceRoot":""}